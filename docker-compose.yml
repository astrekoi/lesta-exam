x-shared-env: &shared-env
  PGUSER: ${PGUSER:-postgres}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
  POSTGRES_DB: ${POSTGRES_DB:-db}
  POSTGRES_HOST: ${POSTGRES_HOST:-db}
  POSTGRES_PORT: ${POSTGRES_PORT:-5432}
  PGDATA: ${PGDATA:-/var/lib/postgresql/data/pgdata}

  POSTGRES_MAX_CONNECTIONS: ${POSTGRES_MAX_CONNECTIONS:-100}
  POSTGRES_SHARED_BUFFERS: ${POSTGRES_SHARED_BUFFERS:-128MB}
  POSTGRES_WORK_MEM: ${POSTGRES_WORK_MEM:-4MB}
  POSTGRES_MAINTENANCE_WORK_MEM: ${POSTGRES_MAINTENANCE_WORK_MEM:-64MB}
  POSTGRES_EFFECTIVE_CACHE_SIZE: ${POSTGRES_EFFECTIVE_CACHE_SIZE:-4096MB}

  API_PORT: ${API_PORT:-5000}"
  JENKINS_PORT: ${JENKINS_PORT:-9090}
  JENKINS_USER: $JENKINS_USER:-root}
  NGINX_PORT: ${NGINX_PORT:-8080"}

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${API_PORT:-5000}:5000"
    environment:
      <<: *shared-env
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      PGUSER: ${PGUSER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-db}
      PGDATA: ${PGDATA:-/var/lib/postgresql/data/pgdata}
    command: >
      postgres -c 'max_connections=${POSTGRES_MAX_CONNECTIONS:-100}'
               -c 'shared_buffers=${POSTGRES_SHARED_BUFFERS:-128MB}'
               -c 'work_mem=${POSTGRES_WORK_MEM:-4MB}'
               -c 'maintenance_work_mem=${POSTGRES_MAINTENANCE_WORK_MEM:-64MB}'
               -c 'effective_cache_size=${POSTGRES_EFFECTIVE_CACHE_SIZE:-4096MB}'
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-U", "${PGUSER:-postgres}", "-d", "${POSTGRES_DB:-db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: ${JENKINS_USER}
    container_name: jenkins
    restart: always
    ports:
      - "${JENKINS_PORT:-9090}:8080"
      - "50000:50000"
    environment:
      - JENKINS_OPTS="--prefix=/jenkins"
      - JAVA_OPTS="-Djenkins.install.runSetupWizard=false -Xmx1024m"
    volumes:
      - ./jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
      - ./:/workspace
    networks:
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/jenkins/login"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "${NGINX_PORT:-8080}:80"
    environment:
      - API_PORT=${API_PORT:-5000}
      - JENKINS_PORT=8080
    volumes:
      - ./nginx/templates:/etc/nginx/templates
    depends_on:
      - app
      - jenkins
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  default:
    driver: bridge
