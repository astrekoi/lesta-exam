.PHONY: help dev prod stop clean logs test setup generate-ssl

GREEN = \033[0;32m
YELLOW = \033[1;33m
RED = \033[0;31m
NC = \033[0m

SCRIPTS_DIR = scripts

-include .env

NGINX_PORT ?= $(shell test -f .env && grep -E '^NGINX_PORT=' .env 2>/dev/null | cut -d '=' -f2 | tr -d '\r\n' || echo '8080')
JENKINS_PORT ?= $(shell test -f .env && grep -E '^JENKINS_PORT=' .env 2>/dev/null | cut -d '=' -f2 | tr -d '\r\n' || echo '9090')
API_PORT ?= $(shell test -f .env && grep -E '^API_PORT=' .env 2>/dev/null | cut -d '=' -f2 | tr -d '\r\n' || echo '5000')
POSTGRES_PORT ?= $(shell test -f .env && grep -E '^POSTGRES_PORT=' .env 2>/dev/null | cut -d '=' -f2 | tr -d '\r\n' || echo '5432')

help: ## –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
	@echo "$(GREEN)–≠–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç Flask API + PostgreSQL + Jenkins$(NC)"
	@echo "$(YELLOW)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "  $(GREEN)%-15s$(NC) %s\n", $$1, $$2}' $(MAKEFILE_LIST)

chmod-scripts: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞ +x –Ω–∞ –≤—Å–µ —Å–∫—Ä–∏–ø—Ç—ã –≤ –ø–∞–ø–∫–µ scripts
	@echo "$(YELLOW)üîê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ +x –Ω–∞ —Å–∫—Ä–∏–ø—Ç—ã...$(NC)"
	@if [ -d scripts ]; then \
		chmod +x scripts/*.sh 2>/dev/null || echo "$(YELLOW)‚ö†Ô∏è  –ù–µ—Ç .sh —Ñ–∞–π–ª–æ–≤ –≤ scripts/$(NC)"; \
		echo "$(GREEN)‚úÖ –ü—Ä–∞–≤–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"; \
	else \
		echo "$(RED)‚ùå –ü–∞–ø–∫–∞ scripts –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç$(NC)"; \
	fi

generate-ssl: ## –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è nginx
	@echo "$(GREEN)üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤...$(NC)"
	@if [ -f scripts/generate-ssl.sh ]; then \
		chmod +x scripts/generate-ssl.sh; \
		bash scripts/generate-ssl.sh; \
		echo "$(GREEN)‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–æ–∑–¥–∞–Ω—ã$(NC)"; \
	else \
		echo "$(RED)‚ùå –°–∫—Ä–∏–ø—Ç scripts/generate-ssl.sh –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
		exit 1; \
	fi

dev: chmod-scripts ## –ó–∞–ø—É—Å—Ç–∏—Ç—å development –æ–∫—Ä—É–∂–µ–Ω–∏–µ
	@echo "$(GREEN)üîß –ó–∞–ø—É—Å–∫ development...$(NC)"
	@echo "$(YELLOW)üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–æ—Ä—Ç—ã: NGINX=$(NGINX_PORT), API=$(API_PORT), POSTGRES=$(POSTGRES_PORT)$(NC)"
	@if [ -f $(SCRIPTS_DIR)/dev.sh ]; then \
		bash $(SCRIPTS_DIR)/dev.sh $(NGINX_PORT) $(API_PORT) $(POSTGRES_PORT); \
	else \
		echo "$(RED)‚ùå –°–∫—Ä–∏–ø—Ç $(SCRIPTS_DIR)/dev.sh –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
		exit 1; \
	fi

prod: chmod-scripts generate-ssl ## –ó–∞–ø—É—Å—Ç–∏—Ç—å production –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å SSL
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ production...$(NC)"
	@echo "$(YELLOW)üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–æ—Ä—Ç—ã: NGINX=$(NGINX_PORT), JENKINS=$(JENKINS_PORT), API=$(API_PORT)$(NC)"
	@if [ -f $(SCRIPTS_DIR)/prod.sh ]; then \
		bash $(SCRIPTS_DIR)/prod.sh $(NGINX_PORT) $(JENKINS_PORT) $(API_PORT) $(POSTGRES_PORT); \
	else \
		echo "$(RED)‚ùå –°–∫—Ä–∏–ø—Ç $(SCRIPTS_DIR)/prod.sh –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
		exit 1; \
	fi

stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@if [ -f $(SCRIPTS_DIR)/stop.sh ]; then \
		bash $(SCRIPTS_DIR)/stop.sh; \
	else \
		echo "$(RED)‚ùå –°–∫—Ä–∏–ø—Ç $(SCRIPTS_DIR)/stop.sh –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
	fi

clean: ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
	@echo "$(RED)üßπ –û—á–∏—Å—Ç–∫–∞...$(NC)"
	@if [ -f $(SCRIPTS_DIR)/clean.sh ]; then \
		bash $(SCRIPTS_DIR)/clean.sh; \
	else \
		echo "$(RED)‚ùå –°–∫—Ä–∏–ø—Ç $(SCRIPTS_DIR)/clean.sh –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
	fi

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
	@if [ -f $(SCRIPTS_DIR)/logs.sh ]; then \
		bash $(SCRIPTS_DIR)/logs.sh; \
	else \
		echo "$(RED)‚ùå –°–∫—Ä–∏–ø—Ç $(SCRIPTS_DIR)/logs.sh –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
	fi

test: chmod-scripts ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API
	@echo "$(GREEN)üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...$(NC)"
	@if [ -f $(SCRIPTS_DIR)/test.sh ]; then \
		bash $(SCRIPTS_DIR)/test.sh $(NGINX_PORT) $(API_PORT); \
	else \
		echo "$(RED)‚ùå –°–∫—Ä–∏–ø—Ç $(SCRIPTS_DIR)/test.sh –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
		exit 1; \
	fi

setup: chmod-scripts ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "$(GREEN)üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...$(NC)"
	@if [ -f $(SCRIPTS_DIR)/setup.sh ]; then \
		bash $(SCRIPTS_DIR)/setup.sh; \
	else \
		echo "$(RED)‚ùå –°–∫—Ä–∏–ø—Ç $(SCRIPTS_DIR)/setup.sh –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
		exit 1; \
	fi

build: ## –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã
	@echo "$(GREEN)üî® –°–±–æ—Ä–∫–∞...$(NC)"
	@if [ -f $(SCRIPTS_DIR)/build.sh ]; then \
		bash $(SCRIPTS_DIR)/build.sh; \
	else \
		echo "$(RED)‚ùå –°–∫—Ä–∏–ø—Ç $(SCRIPTS_DIR)/build.sh –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
	fi

status: ## –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@if [ -f $(SCRIPTS_DIR)/status.sh ]; then \
		bash $(SCRIPTS_DIR)/status.sh $(NGINX_PORT) $(API_PORT) $(POSTGRES_PORT); \
	else \
		echo "$(RED)‚ùå –°–∫—Ä–∏–ø—Ç $(SCRIPTS_DIR)/status.sh –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
	fi

backup: ## Backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@if [ -f $(SCRIPTS_DIR)/backup.sh ]; then \
		bash $(SCRIPTS_DIR)/backup.sh; \
	else \
		echo "$(RED)‚ùå –°–∫—Ä–∏–ø—Ç $(SCRIPTS_DIR)/backup.sh –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
	fi

show-env: ## –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
	@echo "$(GREEN)üìã –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env:$(NC)"
	@echo "  NGINX_PORT: $(NGINX_PORT)"
	@echo "  JENKINS_PORT: $(JENKINS_PORT)"
	@echo "  API_PORT: $(API_PORT)"
	@echo "  POSTGRES_PORT: $(POSTGRES_PORT)"

ssl-info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞—Ö
	@echo "$(GREEN)üîê –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞—Ö:$(NC)"
	@if [ -f nginx/ssl/astrekoi.crt ]; then \
		echo "$(YELLOW)–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞–π–¥–µ–Ω:$(NC)"; \
		openssl x509 -in nginx/ssl/astrekoi.crt -text -noout | grep -A1 "Subject:"; \
		openssl x509 -in nginx/ssl/astrekoi.crt -text -noout | grep -A1 "Not After"; \
		openssl x509 -in nginx/ssl/astrekoi.crt -text -noout | grep -A3 "Subject Alternative Name"; \
	else \
		echo "$(RED)‚ùå SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: make generate-ssl$(NC)"; \
	fi

ssl-clean: ## –£–¥–∞–ª–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
	@echo "$(YELLOW)üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤...$(NC)"
	@rm -rf nginx/ssl/
	@echo "$(GREEN)‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —É–¥–∞–ª–µ–Ω—ã$(NC)"

%: chmod-scripts
	@# –ò—Å–∫–ª—é—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏
	@if echo "$@" | grep -E "^\.|Makefile|\.env|\.git" >/dev/null; then \
		echo "$(YELLOW)‚ö†Ô∏è  –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ñ–∞–π–ª: $@$(NC)"; \
	elif [ -f $(SCRIPTS_DIR)/$@.sh ]; then \
		echo "$(GREEN)üîß –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ $@ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏...$(NC)"; \
		bash $(SCRIPTS_DIR)/$@.sh $(NGINX_PORT) $(API_PORT) $(POSTGRES_PORT) $(JENKINS_PORT); \
	else \
		echo "$(RED)‚ùå –°–∫—Ä–∏–ø—Ç $(SCRIPTS_DIR)/$@.sh –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
		echo "$(YELLOW)üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: make help$(NC)"; \
		exit 1; \
	fi
